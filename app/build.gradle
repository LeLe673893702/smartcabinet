apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.llc.smartcabinet"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DANDROID_STL=c++_shared"
            }
        }

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'armeabi-v7a'
            //abiFilters 'arm64-v8a'
        }
    }

    signingConfigs {
        debug {
            storeFile file('smatcabinet.jks')
            storePassword "llc.com"
            keyAlias "android.keystore"
            keyPassword "llc.com"
            v1SigningEnabled true
            v2SigningEnabled true
        }

        release {
            storeFile file('smatcabinet.jks')
            storePassword "llc.com"
            keyAlias "android.keystore"
            keyPassword "llc.com"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            dimension "env"
            buildConfigField("int", "env", "0")
        }

        product {
            dimension "env"
            buildConfigField("int", "env", "1")
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
        maven {
            url 'https://jitpack.io'
        }
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'libs'
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.github.felHR85:UsbSerial:6.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // 网络请求
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.0'

    implementation 'com.uber.autodispose:autodispose-android-archcomponents:1.4.0'
    implementation 'com.hwangjr.rxbus:rxbus:1.0.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

    implementation 'com.github.nukc.stateview:kotlin:2.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.okhttp3:mockwebserver:3.8.1'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.mik3y:usb-serial-for-android:2.1.0'
    compile(name: 'yshface_2.8', ext: 'aar')
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    def work_version = "2.2.0"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

}
